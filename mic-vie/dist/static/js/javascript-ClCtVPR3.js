var n=(o,d,s)=>new Promise((g,r)=>{var f=t=>{try{i(s.next(t))}catch(a){r(a)}},p=t=>{try{i(s.throw(t))}catch(a){r(a)}},i=t=>t.done?g(t.value):Promise.resolve(t.value).then(f,p);i((s=s.apply(o,d)).next())});import{conf as y,language as e,__tla as u}from"./typescript-D9zr9dE4.js";let l,c,h=Promise.all([(()=>{try{return u}catch(o){}})()]).then(()=>n(void 0,null,function*(){l=y,c={defaultToken:"invalid",tokenPostfix:".js",keywords:["break","case","catch","class","continue","const","constructor","debugger","default","delete","do","else","export","extends","false","finally","for","from","function","get","if","import","in","instanceof","let","new","null","return","set","static","super","switch","symbol","this","throw","true","try","typeof","undefined","var","void","while","with","yield","async","await","of"],typeKeywords:[],operators:e.operators,symbols:e.symbols,escapes:e.escapes,digits:e.digits,octaldigits:e.octaldigits,binarydigits:e.binarydigits,hexdigits:e.hexdigits,regexpctl:e.regexpctl,regexpesc:e.regexpesc,tokenizer:e.tokenizer}}));export{h as __tla,l as conf,c as language};
